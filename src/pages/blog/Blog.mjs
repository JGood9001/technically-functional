// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Path from "path";
import * as React from "react";
import * as Process from "process";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import GrayMatter from "gray-matter";

function $$default(props) {
  return React.createElement("div", {
              className: "flex flex-col items-center gap-y-8 gap-x-8 md:grid md:grid-cols-2 mt-24 text-lg font-semibold"
            }, Belt_Array.mapWithIndex(props.posts, (function (i, post) {
                    return React.createElement(Link, {
                                href: post.path,
                                children: React.createElement("div", {
                                      className: "flex justify-center items-center max-w-96 h-24 pl-4 pr-4 border border-4 border-dark hover:bg-dark hover:text-brand"
                                    }, React.createElement("span", undefined, post.title)),
                                key: String(i)
                              });
                  })));
}

function getStaticProps(_ctx) {
  var posts_directory = Path.join(Process.cwd(), "/blog-posts");
  var filenames = Fs.readdirSync(posts_directory).filter(function (x) {
        return Caml_array.get(x.split("."), 1) !== "js";
      });
  var files = Promise.all(Belt_Array.map(filenames, (function (filename) {
              var filepath = Path.join(posts_directory, filename);
              var content = Fs.readFileSync(filepath, "utf8");
              var matter = GrayMatter(content);
              return Promise.resolve({
                          filename: filename,
                          matter: matter
                        });
            })));
  return files.then(function (xs) {
              var ys = Belt_Array.map(xs, (function (x) {
                      return {
                              path: "/blog/" + x.matter.data.slug,
                              title: x.matter.data.title
                            };
                    }));
              return Promise.resolve({
                          props: {
                            posts: ys
                          }
                        });
            });
}

var Link$1;

export {
  Link$1 as Link,
  $$default ,
  $$default as default,
  getStaticProps ,
  
}
/* fs Not a pure module */
